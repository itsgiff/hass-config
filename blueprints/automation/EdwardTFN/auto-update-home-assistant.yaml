blueprint:
  name: Home Assistant Auto-update
  description: 'Update Home Assistant automatically when a new update is available.

    Note 1 => HACS updates NOT included.

    Note 2 => Home Assistant may restart automatically as part of the update process.

    IMPORTANT => Use under your own risk. Please see the discussions on Home Assistant
    community around the risks involved on auto-updating the system.'
  domain: automation
  source_url: https://community.home-assistant.io/t/auto-update-home-assistant/429015
  input:
    backup_bool:
      name: Create a full backup before start the updates?
      description: Note => This automation will skip the backup if another backup
        was completed in the last two hours before starting the updates.
      default: true
      selector:
        boolean: {}
    schedule_time:
      name: Schedule time
      description: Remember that Home Assistant may restart after an update, so please
        avoid sensitive times.
      default: 03:00:00
      selector:
        time: {}
    schedule_isoweekdays:
      name: Week days
      description: You can select multiple days of week for run the auto-updates.
      default:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      selector:
        select:
          multiple: true
          options:
          - label: Monday
            value: '1'
          - label: Tuesday
            value: '2'
          - label: Wednesday
            value: '3'
          - label: Thursday
            value: '4'
          - label: Friday
            value: '5'
          - label: Saturday
            value: '6'
          - label: Sunday
            value: '7'
          custom_value: false
    schedule_monthday:
      name: Earliest day in the month to update Home Assistant.
      description: 'Usually a new major version of Home Assistant is available on
        the begining of every month. Some people consider those release as not stable
        enough and prefer to avoid those versions, not updating the system until the
        mid of the month (day 15).

        Note => If you select a day higher than 28 the updates won''t run every month.'
      default: 21
      selector:
        number:
          min: 1.0
          max: 31.0
          step: 1.0
          mode: slider
    update_exclusions:
      name: (optional) Exclusions
      description: 'Select the items that should NOT be included on the automated
        updates.

        => Use this if you want to keep some add-on on an specific version and avoid
        auto-updates to it.'
      default: false
      selector:
        entity:
          multiple: true
          domain: update
    actions_pre_update:
      name: (optional) Pre-update actions
      description: 'Actions to execute before the backup or any update starts.

        You can use this to send notifications, turn on/off devices or activate scenes
        before starting the updates.

        Note => Please be aware that all actions will run right before the update
        process, which can happens over-night. Take this in account when selecting
        your actions.

        Note => The variable "\{\{ pending_updates \}\}" is available for your automations
        and contains the list of pending updates.'
      default: []
      selector:
        action: {}
    actions_pos_update:
      name: (optional) Pos-update actions
      description: 'Actions to execute AFTER the update process finishes.

        You can use this to send notifications, turn on/off devices or activate scenes
        after applying  the updates.

        Note => Please be aware that all actions will run right before the update
        process, which can happens over-night. Take this in account when selecting
        your actions.

        Note => The variable "\{\{ pending_updates \}\}" is available for your automations
        and contains the list of pending updates.

        ** IMPORTANT ** => Some updates will automatically restart Home Assistant,
        causing the automation to interrupt before finishing, preventing the pos-updates
        actions to be executed. If you have critical actions to run after an update,
        consider including also in another automation based on Home Assistant start.'
      default: []
      selector:
        action: {}
    pause_entities:
      name: (Optional) Pause update entities
      description: 'You can select one or more entities to pause the updates. If any
        of the selected entities is "On" or "True" the system won''t be updated on
        the schedule time.

        You can use this to hold your updates when you have a party at home, or when
        you are on vacations and don''t want to be concerned about updates on Home
        Assistant.'
      default: []
      selector:
        entity:
          multiple: true
          domain:
          - input_boolean
          - binary_sensor
          - switch
mode: restart
max_exceeded: warning
variables:
  pending_updates: '{{ states.update | selectattr(''state'',''eq'',''on'') | rejectattr(''entity_id'',
    ''in'', input_update_exclusions_processed) | list }}'
  input_backup_bool: !input backup_bool
  input_schedule_isoweekdays: !input schedule_isoweekdays
  input_schedule_monthday: !input schedule_monthday
  input_update_exclusions: !input update_exclusions
  input_update_exclusions_processed: "{% if input_update_exclusions %}\n  {{ input_update_exclusions
    }}\n{% else %}\n  [ ]\n{% endif %}"
  input_pause_entities: !input pause_entities
  input_pause_entities_selected: "{% if input_pause_entities %}\n  true\n{% else %}\n
    \ false\n{% endif %}"
  input_pause_entities_processed: "{% if input_pause_entities_selected %}\n  {{ input_pause_entities
    }}\n{% else %}\n  [ ]\n{% endif %}"
trigger:
- platform: time
  at: !input schedule_time
  id: Time based
condition:
- condition: template
  value_template: '{{ (states.update | selectattr(''state'',''eq'',''on'') | rejectattr(''entity_id'',
    ''in'', input_update_exclusions_processed) | list | count | int(0)) > 0 }}'
- condition: template
  value_template: '{{ (now().day >= ((input_schedule_monthday) | int(0))) }}'
- condition: template
  value_template: '{{ (now().isoweekday() | string in input_schedule_isoweekdays )
    }}'
- condition: or
  conditions:
  - condition: template
    value_template: '{{ ( input_pause_entities_selected == false ) }}'
  - condition: state
    entity_id: !input pause_entities
    state: 'off'
action:
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: "Variables: \n  input_backup_bool: {{ input_backup_bool }}, \n  input_schedule_isoweekdays:
      {{ input_schedule_isoweekdays }}, \n  input_schedule_monthday: {{ input_schedule_monthday
      }}, \n  input_update_exclusions: {{ input_update_exclusions }},\n  input_update_exclusions_processed:
      {{ input_update_exclusions_processed }}\n  input_notifications_dest: {{ input_notifications_dest
      }},\n  input_notifications_dest_processed: {{ input_notifications_dest_processed
      }}"
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    domain: update
    message: A new update is available for Home Assistant.
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    domain: update
    message: "List of updates: - {{ states.update \n  | selectattr('state','eq','on')
      \n  | rejectattr('entity_id', 'in', input_update_exclusions_processed)\n  |
      map(attribute='name') | list | join(' \n\n- ') }}"
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: Running pre-update actions...
- choose:
  - conditions:
    - '{{ true }}'
    sequence: !input actions_pre_update
  default: []
- if:
  - condition: template
    value_template: '{{ ( input_backup_bool ) and ((as_timestamp(now()) - as_timestamp(state_attr(''sensor.backup_state'',
      ''last_backup''))) > 7200) }}'
  then:
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Backing up Home Assistant.
  - service: hassio.backup_full
    data:
      compressed: true
  - wait_template: '{{ ((as_timestamp(now()) - as_timestamp(state_attr(''sensor.backup_state'',
      ''last_backup''))) <= 7200) }}'
    continue_on_timeout: true
    timeout: '3600'
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Backup finished.
  else: []
- if:
  - condition: template
    value_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | rejectattr(''entity_id'',
      ''in'', [''update.home_assistant_core_update'',''update.home_assistant_operating_system_update'',''update.home_assistant_supervisor_update'',''update.home_assistant_google_drive_backup_update''])
      | rejectattr(''entity_id'', ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) > 0 }}'
  then:
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Updating add-ons (Standard).
  - service: update.install
    data: {}
    target:
      entity_id: '{{ states.update  | selectattr(''state'',''eq'',''on'')  | rejectattr(''entity_id'',
        ''in'', [''update.home_assistant_core_update'',''update.home_assistant_operating_system_update'',''update.home_assistant_supervisor_update'',''update.home_assistant_google_drive_backup_update''])
        | rejectattr(''entity_id'', ''in'', input_update_exclusions_proccessed) |
        map(attribute=''entity_id'')  | list  }}'
  - wait_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | rejectattr(''entity_id'',
      ''in'', [''update.home_assistant_core_update'',''update.home_assistant_operating_system_update'',''update.home_assistant_supervisor_update'',''update.home_assistant_google_drive_backup_update''])
      | rejectattr(''entity_id'', ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) < 1 }}'
    continue_on_timeout: true
    timeout: '3600'
  else: []
- if:
  - condition: template
    value_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_google_drive_backup_update'']) | rejectattr(''entity_id'',
      ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) > 0 }}'
  then:
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Updating add-ons (Critical).
  - service: update.install
    data: {}
    target:
      entity_id: '{{ states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
        ''in'', [''update.home_assistant_google_drive_backup_update'']) | rejectattr(''entity_id'',
        ''in'', input_update_exclusions_proccessed) | map(attribute=''entity_id'')  |
        list  }}'
  - wait_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_google_drive_backup_update'']) | rejectattr(''entity_id'',
      ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) < 1 }}'
    continue_on_timeout: true
    timeout: '3600'
  else: []
- if:
  - condition: template
    value_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_core_update'',''update.home_assistant_supervisor_update''])
      | rejectattr(''entity_id'', ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) > 0 }}'
  then:
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Updating core items.
  - service: update.install
    data: {}
    target:
      entity_id: '{{ states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
        ''in'', [''update.home_assistant_core_update'',''update.home_assistant_supervisor_update''])
        | rejectattr(''entity_id'', ''in'', input_update_exclusions_proccessed) |
        map(attribute=''entity_id'')  | list  }}'
  - wait_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_core_update'',''update.home_assistant_supervisor_update''])
      | rejectattr(''entity_id'', ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) < 1 }}'
    continue_on_timeout: true
    timeout: '3600'
- if:
  - condition: template
    value_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_operating_system_update'']) | rejectattr(''entity_id'',
      ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) > 0 }}'
  then:
  - service: logbook.log
    data:
      name: Auto-update
      entity_id: '{{ this.entity_id }}'
      message: Updating OS.
  - service: update.install
    data: {}
    target:
      entity_id: '{{ states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
        ''in'', [''update.home_assistant_operating_system_update'']) | rejectattr(''entity_id'',
        ''in'', input_update_exclusions_proccessed) | map(attribute=''entity_id'')  |
        list  }}'
  - wait_template: '{{ (states.update  | selectattr(''state'',''eq'',''on'')  | selectattr(''entity_id'',
      ''in'', [''update.home_assistant_operating_system_update'']) | rejectattr(''entity_id'',
      ''in'', input_update_exclusions_processed) | map(attribute=''entity_id'')  |
      list | count | int(0) ) < 1 }}'
    continue_on_timeout: true
    timeout: '3600'
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: Updating all remaining items (if any).
- service: update.install
  data: {}
  target:
    entity_id: '{{ states.update  | selectattr(''state'',''eq'',''on'')  | rejectattr(''entity_id'',
      ''in'', input_update_exclusions_proccessed) | map(attribute=''entity_id'')  |
      list  }}'
- wait_template: '{{ (states.update | selectattr(''state'',''eq'',''on'') | rejectattr(''entity_id'',
    ''in'', input_update_exclusions_processed) | list | count | int(0)) < 1 }}'
  continue_on_timeout: true
  timeout: '3600'
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: All updates done.
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: "Remaining updates: - {{ states.update \n  | selectattr('state','eq','on')
      \n  | rejectattr('entity_id', 'in', input_update_exclusions_processed)\n  |
      map(attribute='name') | list | join(' \n\n- ') }}"
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: Running pos-update actions...
- choose:
  - conditions:
    - '{{ true }}'
    sequence: !input actions_pos_update
  default: []
- service: logbook.log
  data:
    name: Auto-update
    entity_id: '{{ this.entity_id }}'
    message: Done!
